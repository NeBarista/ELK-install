---
- name: Create "{{ WORK_DIR }}" directory for configuration files
  file:
    path: "{{ WORK_DIR }}"
    state: directory
    mode: '0755'

- name: Install prerequisites
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
      - rsync
      - python3-pip
    state: present

- name: Add Docker GPG key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add Docker APT repository
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable"
    state: present

- name: Install Docker
  apt:
    name: docker-ce
    state: present
    update_cache: yes

- name: Get latest docker-compose version
  uri:
    url: https://api.github.com/repos/docker/compose/releases/latest
    return_content: yes
  register: docker_compose_version
  changed_when: false

- name: Install docker-compose
  get_url:
    url: "https://github.com/docker/compose/releases/download/{{ docker_compose_version.json.tag_name }}/docker-compose-Linux-x86_64"
    dest: /usr/local/bin/docker-compose
    mode: '0755'

- name: Synchronize logstash_ingest_data to "{{ WORK_DIR }}"
  synchronize:
    src: elastic-stack-docker-part-one/
    dest: "{{ WORK_DIR }}/"
    mode: push
    recursive: yes

- name: Set owner and group for "{{ WORK_DIR }}"
  file:
    path: "{{ WORK_DIR }}"
    owner: root
    group: root
    recurse: yes
    state: directory

- name: Deploy elastic config
  template:
    src: elasticsearch.yml.j2
    dest: "{{ WORK_DIR }}/elasticsearch.yml"

- name: Deploy kibana config
  template:
    src: kibana.yml.j2
    dest: "{{ WORK_DIR }}/kibana.yml"

- name: Generate .env file from template
  template:
    src: env.j2
    dest: "{{ WORK_DIR }}/.env"

- name: Install docker-compose and Docker SDK for ansible module docker-compose.
  pip:
    name:
      - docker-compose
      - docker
    state: present

- name: Run docker-compose down -v
  docker_compose:
    project_src: "{{ WORK_DIR }}"
    state: absent
    remove_volumes: yes

- name: Run docker-compose up -d
  docker_compose:
    project_src: "{{ WORK_DIR }}"
    state: present
